using System.Collections;
using System.Collections.Generic;
using Unity.VisualScripting;
using UnityEngine;

public class NameGenerator : MonoBehaviour
{
    // Reference to the TextAnalysis script
    public TextAnalysis textAnalysis;// 2D array of letter occurences
    int[,] letterOccurences;

    // Final name generated by the script
    string outputName;

    private void Update()
    {
        if(Input.GetKeyDown(KeyCode.O))
        {
            GenerateName();
        }
    }

    private void GenerateName()
    {
        // Get the 2D array of letter occurences from the TextAnalysis script
        int[,] letterOccurences = textAnalysis.letterOccurences;

        // Initialize a string to store the generated name
        string outputName = "";

        // Choose a random letter as the first letter of the name
        int firstLetter = Random.Range(0, 26);
        outputName += (char)(firstLetter + 65);

        // Initialize a variable to store the current letter
        int currentLetter = firstLetter;

        // Repeat the process of choosing the next letter until the name is 7 letters long
        while (outputName.Length < 7)
        {
            // Get the row of letter occurences for the current letter
            int[] letterRow = new int[26];
            for (int i = 0; i < 26; i++)
            {
                letterRow[i] = letterOccurences[currentLetter, i];
            }

            // Choose the next letter based on the weighted random of the letter occurences in the row
            int nextLetter = WeightedRandom(letterRow);
            outputName += (char)(nextLetter + 65);

            // Update the current letter
            currentLetter = nextLetter;
        }

        outputName = char.ToUpper(outputName[0]) + outputName.Substring(1).ToLower();

        // Output the generated name
        Debug.Log(outputName);
    }

    // Function to choose a random index based on the weights in the array
    int WeightedRandom(int[] weights)
    {
        // Calculate the total weight
        int totalWeight = 0;
        for (int i = 0; i < weights.Length; i++)
        {
            totalWeight += weights[i];
        }

        // Choose a random number between 0 and the total weight
        int randomNum = Random.Range(0, totalWeight);

        // Iterate through the array and subtract the weight of each index from the random number
        // until the random number is less than 0
        // The index where this occurs is the chosen index
        int index = 0;
        while (randomNum >= 0)
        {
            randomNum -= weights[index];
            index++;
        }

        // Return the chosen index
        return index - 1;
    }
}